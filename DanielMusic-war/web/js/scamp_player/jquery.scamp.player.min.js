/*
 * Scamp Player ver. 2.0.0
 * jQuery SoundManager 2 Plugin
 *
 * Copyright (c) 2015 Mariusz Rek
 * Rascals Themes 2015
 *
 */

(function (a) {
    a.ScampPlayer = function (b, c) {
        var k = {sm_options: {}, queue: null, iscroll_options: {scrollX: false, scrollY: true, mouseWheel: true, scrollbars: true, interactiveScrollbars: true, scrollbars:"custom", click: true}, volume: 100, autoplay: false, loop: false, random: false, titlebar: false, no_track_image: null, delay: 5, path: null, client_id: "23f5c38e0aa354cdd0e1a6b4286f6aa4", debug: false, labels: {play: "Play", cover: "Cover", title: "Title/Artist", buy: "Buy", remove: "Remove"}, obj: {status: "ready", action: "", tracks: [], tracks_size: 0, track_nr: -1}, mobile: false, status: null, soundcloud: false, track_id: 0, new_tracks_nr: 0, new_tracks_notifications: true, sm_init: false, rebuild: false, sound: null, track: null, searching: false, tracklist_length: null, document_title: document.title, track_html: null, tracklist: null, onReady: function () {
            }};
        var d = this;
        d.settings = {};
        var o = function () {
            d.settings = a.extend({}, k, c);
            d.el = b;
            if (window.soundManager) {
                sm_obj = {onready: function () {
                        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                            d.settings.mobile = true;
                        }
                        if (d.settings.mobile) {
                            d.settings.autoplay = false;
                        }
                        if (d.settings.mobile && d.settings.path != null) {
                            a("body").append('<div id="scamp-mobile-init"></div>');
                            var u = soundManager.createSound({id: "init_mobile_track", url: d.settings.path + "/blank.mp3", autoload: false, volume: 10, onload: function () {
                                }, onplay: function () {
                                }, onpause: function () {
                                }, onresume: function () {
                                }, onstop: function () {
                                }, onfinish: function () {
                                }, whileloading: function () {
                                }, whileplaying: function () {
                                }});
                            a("#scamp-mobile-init").on("touchstart click mousemove", function (x) {
                                u.play();
                                a(this).remove();
                            });
                        }
                        if (typeof SC !== "undefined") {
                            SC.initialize({client_id: d.settings.client_id});
                            SC.whenStreamingReady(function () {
                                d.settings.soundcloud = true;
                            });
                        }
                        d.settings.sm_init = true;
                        var v = null;
                        if (a("> a", d.el).length) {
                            v = new Array();
                            var w = a("> a", d.el).length;
                            a("> a", d.el).each(function () {
                                v.push(a(this));
                                a(this).remove();
                            });
                        }
                        d.el.append('<div id="sp-toggle-wrap"><div id="sp-toggle"></div></div><div class="sp-main-container"><div class="sp-queue-container"><div class="sp-queue"><div id="sp-scroller"><table id="sp-queue-scroll"><thead><tr><th>' + d.settings.labels.play + "</th><th>" + d.settings.labels.cover + '</th><th class="sp-th-title">' + d.settings.labels.title + '</th><th class="sp-th-cart sp-small-screen">' + d.settings.labels.buy + '</th><th class="sp-th-remove sp-small-screen sp-medium-screen">' + d.settings.labels.remove + '</th></tr></thead><tbody></tbody></table></div></div><div class="sp-progress-mobile"><div class="sp-progress"><span class="sp-loading"></span><span class="sp-position"></span><span class="sp-time-elapsed"></span><span class="sp-time-total"></span></div></div></div><div class="sp-player-container"><div class="sp-buttons-container"><div class="sp-controls"><a class="sp-prev-button"></a><a class="sp-play-button"></a><a class="sp-next-button"></a><div class="sp-volume-container"><div class="sp-volume-bar-container"><div class="sp-volume-slider"><span class="sp-volume-position"></span></div></div><a class="sp-volume-button"></a></div></div><div class="sp-queue-button-container"><span class="sp-badge"></span><a class="sp-queue-button"></a></div></div><div class="sp-progress-container"><div class="sp-progress"><span class="sp-loading"></span><span class="sp-position"></span><span class="sp-time-elapsed"></span><span class="sp-time-total"></span></div></div><div class="sp-track-container"><div class="sp-track-details"><a class="sp-track-cover"><img src="' + d.settings.no_track_image + '" alt="Track cover" class="sp-track-artwork"/></a><a class="sp-track-title"></a><a class="sp-track-artist"></a><div class="sp-marquee-container"><span class="sp-marquee"></span></div></div></div></div></div>');
                        d.settings.track_html = ['<tr class="sp-track">', '<td><a class="sp-track-control sp-icon" href="#"></a></td>', '<td class="sp-cover-artwork"><img src="" alt="Cover" /></td>', '<td class="sp-title"><a class="sp-title-button"></a><a class="sp-artist-button"></a></td>', '<td class="sp-cart sp-small-screen"><a class="sp-icon sp-cart-button"></a></td>', '<td class="sp-remove sp-small-screen sp-medium-screen"><span class="sp-icon sp-remove-button"></span></td>'].join("\n");
                        d.settings.tracklist = a("#sp-queue-scroll");
                        if (typeof IScroll !== "undefined") {
                            d.settings.queue = new IScroll("#sp-scroller", d.settings.iscroll_options);
                        } else {
                            return false;
                        }
                        if (a(d.el).hasClass("sp-show-list")) {
                            _set_queue_height();
                        }
                        a(".sp-volume-position").css("width", d.settings.volume + "%");
                        _set_vol_class(d.settings.volume);
                        if (!d.settings.mobile) {
                            var t = function (x) {
                                a(".sp-volume-bar-container").fadeToggle(200, "swing");
                                d.el.removeClass("sp-show-list");
                                x.preventDefault();
                                x.stopPropagation();
                            };
                            a(".sp-volume-button").on("click", t);
                            a(document).click(function (y) {
                                var x = a(".sp-volume-bar-container");
                                if (!x.is(y.target) && x.has(y.target).length === 0) {
                                    a(".sp-volume-button").off("click");
                                    a(".sp-volume-bar-container").fadeOut(200, "swing", function () {
                                        a(".sp-volume-button").on("click", t);
                                    });
                                }
                            });
                        }
                        if (v !== null) {
                            d.settings.obj = {status: "working", action: "add_list", tracks: v, tracks_size: w, track_nr: -1, };
                            r();
                        }
                        a(".sp-play-button").on("touchstart click", l);
                        a(".sp-next-button").on("touchstart click", f);
                        a(".sp-prev-button").on("touchstart click", e);
                        a(".sp-queue-button").on("touchstart click", function (x) {
                            d.el.toggleClass("sp-show-list");
                            _set_queue_height();
                            x.preventDefault();
                        });
                        a("#sp-toggle").on("touchstart click", function (x) {
                            d.el.toggleClass("sp-show-player");
                            x.preventDefault();
                        });
                        j();
                        d.update_events("body");
                        d.el.addClass("sp-show");
                        d.settings.onReady.call(undefined);
                        return;
                    }, ontimeout: function () {
                    }, defaultOptions: {volume: d.settings.volume, usePeakData: false}};
                a.extend(d.settings.sm_options, sm_obj);
                soundManager.setup(d.settings.sm_options);
            }
        };
        _set_queue_height = function () {
            var u = a(".sp-player-container", d.el).outerHeight();
            var t = a(".sp-progress-mobile ", d.el).outerHeight();
            var v = a(window).height();
            if (a(".sp-progress-mobile", d.el).is(":visible")) {
                v = v - (u * 2);
            } else {
                v = v - u;
                u = 0;
            }
            a(".sp-queue-container", d.el).css("padding-bottom", u);
            a(".sp-queue-container", d.el).height(v);
            setTimeout(function () {
                d.settings.queue.refresh();
            }, 200);
            return v;
        };
        a(window).on("resize", _set_queue_height);
        _get_track_index = function () {
            var t, u = d.settings.track.find(".sp-track-control").attr("href");
            track_from_queue = a("#sp-queue-scroll").find('.sp-track-control[href="' + u + '"]');
            t = track_from_queue.parents('tr[class*="sp-track"]').index();
            return t;
        };
        var g = function () {
            var t = d.settings.track.find(".sp-track-control").attr("href");
            d.settings.sound = soundManager.createSound({id: "scamp_sound", url: t, autoload: false, volume: d.settings.volume, onload: function () {
                }, onplay: function () {
                    if (d.settings.sound.readyState == 3) {
                        d.settings.status = "play";
                    } else {
                        d.settings.track.addClass("loading");
                        d.el.addClass("loading");
                        d.settings.status = "loading";
                    }
                    d.update_content();
                    a(".sp-volume-position").css("width", d.settings.volume + "%");
                    d.settings.sound.setVolume(d.settings.volume);
                }, onpause: function () {
                    d.settings.status = "pause";
                    d.update_content();
                    if (!d.settings.searching) {
                        d.settings.track.removeClass("playing").addClass("paused");
                        d.el.removeClass("playing").addClass("paused");
                    }
                }, onresume: function () {
                    d.settings.status = "play";
                    d.update_content();
                    d.settings.track.removeClass("paused").addClass("playing");
                    d.el.removeClass("paused").addClass("playing");
                }, onstop: function () {
                    d.settings.sound.setPosition(0);
                    d.settings.status = "stop";
                    d.update_content();
                    d.settings.track.removeClass("playing loading paused");
                    d.el.removeClass("playing loading paused");
                    a(".sp-time-elapsed, .sp-time-total").empty();
                    a(".sp-progress").find(".sp-position").width(0);
                }, onfinish: function () {
                    a(".sp-time-elapsed, .sp-time-total").empty();
                    a(".sp-progress").find(".sp-position").width(0);
                    d.settings.status = "stop";
                    d.update_content();
                    d.settings.track.removeClass("loading paused");
                    d.el.removeClass("loading paused");
                    if (d.settings.random) {
                        q();
                        return false;
                    }
                    if (d.settings.loop) {
                        f();
                    } else {
                        var u = _get_track_index();
                        if (u != d.settings.tracklist_length) {
                            f();
                        } else {
                            d.settings.track.removeClass("playing");
                            d.el.removeClass("playing");
                        }
                    }
                }, whileloading: function () {
                    a(".sp-progress").find(".sp-loading").width(d.settings.sound.bytesLoaded / d.settings.sound.bytesTotal * 100 + "%");
                }, whileplaying: function () {
                    d.settings.track.removeClass("paused loading").addClass("playing");
                    d.el.removeClass("paused loading").addClass("playing");
                    d.settings.status = "play";
                    d.update_content();
                    a(".sp-progress").find(".sp-position").width(d.settings.sound.position / d.settings.sound.durationEstimate * 100 + "%");
                    a(".sp-time-elapsed").html(_format_time(d.settings.sound.position));
                    a(".sp-time-total").html(_format_time(d.settings.sound.durationEstimate));
                }});
            d.settings.sound.togglePause();
            s();
        };
        var l = function () {
            if (d.settings.tracklist_length == null) {
                return;
            }
            if (d.settings.track == null) {
                d.settings.track = a("#sp-queue-scroll tbody tr:eq(0)");
            }
            if (d.settings.sound) {
                d.settings.sound.togglePause();
            } else {
                g();
            }
            if (d.settings.titlebar) {
                document.title = d.settings.track.find(".sp-title-button").text() + " | " + d.settings.document_title;
            }
            return false;
        };
        var q = function () {
            if (d.settings.tracklist_length == null || d.settings.tracklist_length < 2) {
                d.settings.track = t;
                l();
                return false;
            }
            function u(y, x) {
                return Math.floor(Math.random() * (x - y + 1)) + y;
            }
            var w = _get_track_index(), t = null, v = null;
            while ((v = u(0, d.settings.tracklist_length)) == w) {
            }
            d.settings.track.removeClass("playing");
            d.el.removeClass("playing");
            t = a("#sp-queue-scroll tbody tr:eq(" + v + ")");
            _destruct_sound();
            d.settings.track = t;
            l();
            if (d.settings.sound) {
                d.settings.sound.setPosition(0);
            }
            return true;
        };
        var f = function () {
            if (d.settings.tracklist_length == null) {
                return;
            }
            var w = _get_track_index(), u = w + 1, t = null, v = false;
            if (d.el.hasClass("playing")) {
                d.settings.track.removeClass("playing");
                d.el.removeClass("playing");
                v = true;
            }
            if (u > d.settings.tracklist_length) {
                u = 0;
            }
            t = a("#sp-queue-scroll tbody tr:eq(" + u + ")");
            _destruct_sound();
            d.settings.track = t;
            if (v) {
                l();
            }
            if (d.settings.sound) {
                d.settings.sound.setPosition(0);
            }
            return false;
        };
        var e = function () {
            if (d.settings.tracklist_length == null) {
                return;
            }
            var w = _get_track_index(), v = w - 1, t = null, u = false;
            if (d.el.hasClass("playing")) {
                d.settings.track.removeClass("playing");
                d.el.removeClass("playing");
                u = true;
            }
            if (v < 0) {
                v = d.settings.tracklist_length;
            }
            t = a("#sp-queue-scroll tbody tr:eq(" + v + ")");
            _destruct_sound();
            d.settings.track = t;
            if (u) {
                l();
            }
            if (d.settings.sound) {
                d.settings.sound.setPosition(0);
            }
            return false;
        };
        var s = function () {
            a(".sp-track-container a", d.el).removeAttr("href").removeAttr("target");
            a(".sp-track-container .sp-track-title, .sp-track-container .sp-track-artist", d.el).text("");
            a(".sp-track-container .sp-track-artwork", d.el).attr("src", d.settings.no_track_image);
            a(".sp-marquee", d.el).text("");
            if (d.settings.sound) {
                var z = d.settings.track.find(".sp-cover-artwork img").attr("src"), A = d.settings.track.find(".sp-title-button").text(), v = d.settings.track.find(".sp-artist-button").text(), x = d.settings.track.find(".sp-artist-button").attr("href"), u = d.settings.track.find(".sp-artist-button").attr("target"), t = d.settings.track.find(".sp-title-button").attr("href"), y = d.settings.track.find(".sp-title-button").attr("target");
                shop_url = d.settings.track.find(".sp-tl-shop").attr("href"), shop_target = d.settings.track.find(".sp-tl-shop").attr("target");
                if (v !== "" && x !== "") {
                    a(".sp-track-container .sp-track-artist", d.el).attr("href", x);
                    if (u !== "") {
                        u = u;
                    } else {
                        u = "_self";
                    }
                    a(".sp-track-container .sp-track-artist", d.el).attr("target", u);
                }
                if (t !== "") {
                    a(".sp-track-container .sp-track-title", d.el).attr("href", t);
                    if (y !== "") {
                        y = y;
                    } else {
                        y = "_self";
                    }
                    a(".sp-track-container .sp-track-title", d.el).attr("target", y);
                }
                a(".sp-track-container .sp-track-artwork", d.el).attr("src", z);
                a(".sp-track-container .sp-track-title", d.el).text(A);
                a(".sp-track-container .sp-track-artist", d.el).text(v);
                var w = "<strong>" + A + "</strong>";
                if (v !== "") {
                    w = w + " - " + v;
                }
                a(".sp-marquee", d.el).html(w);
            }
            return false;
        };
        _destruct_sound = function () {
            if (d.settings.sound) {
                d.settings.sound.stop();
                d.settings.sound.setPosition(0);
                d.settings.sound.destruct();
                d.settings.sound = null;
                s();
            }
        };
        var r = function () {
            d.settings.obj.track_nr++;
            if (d.settings.obj.track_nr == 0) {
                d.el.addClass("sp-queue-loading");
                a(".sp-queue").css("opacity", 0);
            }
            if (d.settings.obj.track_nr >= d.settings.obj.tracks_size) {
                h();
            } else {
                setTimeout(p, d.settings.delay);
            }
        };
        var h = function () {
            var u = null, t = null, v = null;
            if (a("#sp-scroller tr").length > 0 && d.settings.rebuild) {
                _set_queue_height();
                d.el.removeClass("sp-queue-loading");
                a(".sp-queue").css("opacity", 1);
                d.settings.rebuild = false;
                if (d.settings.new_tracks_notifications) {
                    a(".sp-badge", d.el).text("+" + d.settings.new_tracks_nr);
                    if (a(".sp-badge", d.el).text() != "+0") {
                        a(".sp-badge", d.el).addClass("sp-show-badge");
                        setTimeout(function () {
                            a(".sp-badge", d.el).removeClass("sp-show-badge");
                        }, 5000);
                    }
                }
                d.settings.new_tracks_nr = 0;
            } else {
                d.el.removeClass("sp-queue-loading");
                a(".sp-queue").css("opacity", 1);
            }
            if (d.settings.track != null && d.settings.autoplay) {
                if (d.settings.random) {
                    q();
                } else {
                    l();
                }
                d.settings.autoplay = false;
            }
            if (d.settings.obj.action == "play_track" || d.settings.obj.action == "play_list") {
                for (var w = 0;
                        w < d.settings.obj.tracks_size; w++) {
                    u = d.settings.obj.tracks[w].data("status");
                    v = d.settings.obj.tracks[w].attr("href");
                    if (u == "track_ready" || u == "already_onlist") {
                        t = d.settings.track.find(".sp-track-control").attr("href");
                        if (t != v) {
                            _destruct_sound();
                            var x = a("#sp-queue-scroll").find('.sp-track-control[href="' + v + '"]');
                            d.settings.track = x.parents('tr[class*="sp-track"]');
                        }
                        l();
                        break;
                    }
                }
            }
            d.settings.obj.status = "ready";
        };
        var p = function () {
            var v = d.settings.obj.track_nr, u = d.settings.obj.tracks[v].attr("href"), t = /http(s?):\/\/soundcloud/;
            if (t.test(u)) {
                if (a('.sp-queue .sp-track[data-sc="' + u + '"]').length > 0) {
                    d.settings.obj.tracks[v].attr("data-status", "already_onlist");
                    var w = a('#sp-queue-scroll tbody .sp-track[data-sc="' + u + '"]');
                    w = w.find(".sp-track-control").attr("href");
                    d.settings.obj.tracks[v].attr("href", w);
                    r();
                } else {
                    _add_soundcloud();
                }
            } else {
                if (a('.sp-queue .sp-track-control[href="' + u + '"]').length > 0) {
                    d.settings.obj.tracks[v].attr("data-status", "already_onlist");
                    r();
                } else {
                    if (u != "" || u != "#" || u != undefined) {
                        d.settings.obj.tracks[v].attr("data-status", "file_exists");
                        _create_track();
                    } else {
                        d.settings.obj.tracks[v].attr("data-status", "Error404");
                        r();
                    }
                }
            }
        };
        _add_soundcloud = function () {
            var v = d.settings.obj.track_nr, t = d.settings.obj.tracks[v].attr("href");
            if (d.settings.client_id == "") {
                d.settings.obj.tracks[v].attr("data-status", "Error404");
                r();
                return false;
            } else {
                if (!d.settings.soundcloud) {
                    d.settings.obj.tracks[v].attr("data-status", "Error404");
                    r();
                    return false;
                }
            }
            if (d.settings.obj.tracks[v].data("sc_stream") != undefined) {
                var u = {stream_url: null, artwork_url: null, title: null, permalink_url: null, user: {username: null, permalink_url: null}};
                u.stream_url = d.settings.obj.tracks[v].data("sc_stream");
                u.artwork_url = d.settings.obj.tracks[v].data("sc_art");
                u.title = d.settings.obj.tracks[v].data("sc_title");
                u.user.username = d.settings.obj.tracks[v].data("artist");
                u.user.permalink = d.settings.obj.tracks[v].data("artist_url");
                u.permalink = d.settings.obj.tracks[v].data("release_url");
                _create_soundcloud(u);
                return false;
            }
            SC.get("/resolve", {url: t}, function (w) {
                if (w.length != undefined) {
                    w.tracks = w;
                }
                if (w.errors) {
                    d.settings.obj.tracks[v].attr("data-status", "Error404");
                    r();
                } else {
                    if (w.kind != undefined && w.kind == "user") {
                        SC.get("/users/" + w.id + "/tracks", function (x) {
                            x.tracks = x;
                            _process_sc_tracks(x);
                        });
                    } else {
                        if (w.kind != undefined && w.kind == "group") {
                            SC.get("/groups/" + w.id + "/tracks", function (x) {
                                x.tracks = x;
                                _process_sc_tracks(x);
                            });
                        } else {
                            if (w.tracks) {
                                _process_sc_tracks(w);
                            } else {
                                _create_soundcloud(w);
                            }
                        }
                    }
                }
            });
        };
        _process_sc_tracks = function (w) {
            var z = d.settings.obj.track_nr, t = d.settings.obj.tracks[z].attr("href"), u = z, A = [], v = d.settings.obj.tracks[z].attr("data-artist"), C = d.settings.obj.tracks[z].attr("data-artist_url"), B = d.settings.obj.tracks[z].attr("data-artist_target"), y = d.settings.obj.tracks[z].attr("data-release_url"), x = d.settings.obj.tracks[z].attr("data-release_target");
            shop_url = d.settings.obj.tracks[z].attr("data-shop_url"), shop_target = d.settings.obj.tracks[z].attr("data-shop_target");
            d.settings.obj.tracks.splice(z, 1);
            d.settings.obj.tracks_size = d.settings.obj.tracks_size - 1;
            d.settings.obj.track_nr = d.settings.obj.track_nr - 1;
            if (shop_url == undefined || shop_url == "") {
                shop_url = "";
            }
            if (shop_target == undefined || shop_target == "") {
                shop_target = "";
            }
            a.each(w.tracks, function (I, F) {
                var K, J, E, H, G;
                if (v == undefined || v == "") {
                    K = F.user.username;
                } else {
                    K = v;
                }
                if (C == undefined || C == "") {
                    J = F.user.permalink_url;
                    E = "_blank";
                } else {
                    J = C;
                    if (B == undefined || B == "") {
                        E = "_blank";
                    } else {
                        E = B;
                    }
                }
                if (y == undefined || y == "") {
                    H = F.permalink_url;
                    G = "_blank";
                } else {
                    H = y;
                    if (x == undefined || x == "") {
                        G = "_blank";
                    } else {
                        G = x;
                    }
                }
                var D = '<a href="' + F.permalink_url + '" data-cover="" data-sc_list="' + t + '" data-sc_stream="' + F.stream_url + '" data-sc_art="' + F.artwork_url + '" data-sc_title="' + F.title + '" data-artist="' + K + '" data-artist_url="' + J + '" data-artist_target="' + E + '" data-release_url="' + H + '" data-release_target="' + G + '" data-shop_url="' + shop_url + '" data-shop_target="' + shop_target + '">' + F.title + "</a>";
                A.push(a(D));
            });
            _insert_array_at(d.settings.obj.tracks, u, A);
            d.settings.obj.tracks_size = d.settings.obj.tracks_size + A.length;
            r();
        };
        _insert_array_at = function (v, u, t) {
            Array.prototype.splice.apply(v, [u, 0].concat(t));
            return v;
        };
        _create_soundcloud = function (v) {
            var x = d.settings.obj.track_nr, t = d.settings.obj.tracks[x].attr("href"), B = v.stream_url, u = d.settings.obj.tracks[x].attr("data-artist"), A = d.settings.obj.tracks[x].attr("data-artist_url"), z = d.settings.obj.tracks[x].attr("data-artist_target"), y = d.settings.obj.tracks[x].attr("data-release_url"), w = d.settings.obj.tracks[x].attr("data-release_target");
            (B.indexOf("secret_token") == -1) ? B = B + "?" : B = B + "&";
            B = B + "consumer_key=" + d.settings.client_id;
            if (u == undefined || u == "") {
                u = v.user.username;
            }
            if (A == undefined || A == "") {
                A = v.user.permalink_url;
            }
            if (z == undefined || z == "") {
                z = "_blank";
            }
            if (y == undefined || y == "") {
                y = v.permalink_url;
            }
            if (w == undefined || w == "") {
                w = "_blank";
            }
            d.settings.obj.tracks[x].attr("data-sc", t);
            d.settings.obj.tracks[x].attr("href", B);
            d.settings.obj.tracks[x].attr("data-cover", v.artwork_url);
            d.settings.obj.tracks[x].attr("data-artist", u);
            d.settings.obj.tracks[x].attr("data-artist_url", A);
            d.settings.obj.tracks[x].attr("data-artist_target", z);
            d.settings.obj.tracks[x].attr("data-release_url", y);
            d.settings.obj.tracks[x].attr("data-release_target", w);
            d.settings.obj.tracks[x].text(v.title);
            _create_track();
        };
        _create_track = function () {
            d.settings.rebuild = true;
            var C = d.settings.obj.track_nr, t = d.settings.obj.tracks[C].attr("href"), B = d.settings.obj.tracks[C].text(), H = d.settings.obj.tracks[C].data("cover"), x = d.settings.obj.tracks[C].data("artist"), F = d.settings.obj.tracks[C].data("artist_url"), E = d.settings.obj.tracks[C].data("artist_target"), D = d.settings.obj.tracks[C].data("release_url"), A = d.settings.obj.tracks[C].data("release_target"), w = d.settings.obj.tracks[C].data("shop_url"), z = d.settings.obj.tracks[C].data("shop_target"), y = a(d.settings.track_html), v = null;
            if (a('.sp-queue .sp-track-control[href="' + t + '"]', d.el).length) {
                d.settings.obj.tracks[C].attr("data-status", "already_onlist");
                r();
                return false;
            }
            y.find(".sp-track-control").attr("href", t);
            if (H == undefined || H == "") {
                H = d.settings.no_track_image;
            }
            y.find(".sp-cover-artwork img").attr("src", H);
            y.find(".sp-title-button").text(B);
            if (D != undefined || D != "") {
                y.find(".sp-title-button").attr("href", D);
                if (A != undefined || A != "") {
                    y.find(".sp-title-button").attr("target", A);
                }
            }
            if (x != undefined && x != "") {
                y.find(".sp-artist-button").text(x);
                if (F != undefined || F != "") {
                    y.find(".sp-artist-button").attr("href", F);
                    if (E != undefined && E != "") {
                        y.find(".sp-artist-button").attr("target", E);
                    }
                }
            }
            if (w != undefined && w != "") {
                y.find(".sp-cart-button").attr("href", w);
                if (z != undefined && z != "") {
                    y.find(".sp-cart-button").attr("target", z);
                }
            } else {
                y.find(".sp-cart-button").remove();
            }
            if (d.settings.obj.tracks[C].data("sc") != undefined) {
                var u = d.settings.obj.tracks[C].data("sc");
                y.attr("data-sc", u).addClass("sc-track");
            }
            if (d.settings.obj.tracks[C].data("sc_list") != undefined) {
                var G = d.settings.obj.tracks[C].data("sc_list");
                y.attr("data-sc_list", G).addClass("sc-list");
            }
            d.settings.tracklist.append(y);
            v = d.settings.tracklist.find(y);
            d.settings.track_id++;
            d.settings.new_tracks_nr++;
            d.settings.tracklist_length = a("#sp-queue-scroll tbody .sp-track").length - 1;
            if (d.settings.tracklist_length == 0) {
                d.settings.track = v;
            }
            d.settings.obj.tracks[C].attr("data-status", "track_ready");
            v.find(".sp-track-control").on("click", i);
            v.find(".sp-remove-button").on("click", m);
            r();
        };
        var i = function (t) {
            t.preventDefault();
            var u = a(this).parents('tr[class*="sp-track"]');
            if (u.hasClass("playing") || u.hasClass("paused")) {
                l();
                return false;
            }
            _destruct_sound();
            d.settings.track = u;
            l();
            return false;
        };
        var m = function (w) {
            w.preventDefault();
            var x = a(this).parents('tr[class*="sp-track"]'), A = a(this).parents('tr[class*="sp-track"]').index(), y = null, z = false;
            if (x.hasClass("playing")) {
                z = true;
            }
            if (d.settings.sound) {
                y = d.settings.sound.url;
            }
            if (d.settings.tracklist_length == 0) {
                _destruct_sound();
                d.settings.track = null;
                d.settings.tracklist_length = null;
                n(0);
                return;
            }
            if (y == x.find(".sp-track-control ").attr("href")) {
                var v = A, u = v + 1, t = null;
                if (u > d.settings.tracklist_length) {
                    u = 0;
                }
                t = a("#sp-queue-scroll tbody tr:eq(" + u + ")");
                if (z) {
                    _destruct_sound();
                    d.settings.track = t;
                    l();
                } else {
                    _destruct_sound();
                }
            }
            n(A);
            d.settings.tracklist_length = a("#sp-queue-scroll tbody .sp-track").length - 1;
        };
        var n = function (t) {
            if (a("#sp-scroller tr").length > 0) {
                d.settings.tracklist.find("tbody tr:eq(" + t + ")").remove();
                _set_queue_height;
            }
            return false;
        };
        var j = function () {
            var t = "ontouchstart" in window, w = t ? "touchstart" : "mousedown", x = t ? "touchmove" : "mousemove", u = t ? "touchend" : "mouseup", v = t ? "touchcancel" : "mouseup";
            a(".sp-volume-slider").on(w, function (E) {
                if (d.settings.tracklist_length == null) {
                    return;
                }
                var B = a(this), y = B.find(".sp-volume-position"), D = B.offset().left, A = B.width(), C = d.settings.sound, z = null;
                a(document).on(x, function (H) {
                    var G = t ? H.originalEvent.touches[0] : H;
                    var F = Math.max(0, Math.min(G.clientX - D, A));
                    z = Math.floor(F / A * 100);
                    y.width(F);
                    if (C) {
                        C.setVolume(z);
                    }
                    _set_vol_class(z);
                    return false;
                }).on(u, function (F) {
                    d.settings.volume = z;
                    a(this).unbind(x);
                    a(this).unbind(u);
                    return false;
                }).trigger({type: x, clientX: E.clientX});
                return false;
            });
            a(".sp-progress").bind(w, function (D) {
                if (d.settings.tracklist_length == null) {
                    return;
                }
                var z = a(this).addClass("searching"), y = z.find(".sp-postion"), C = z.offset().left, A = z.width(), B = d.settings.sound;
                d.settings.searching = true;
                B.pause();
                a(document).bind(x, function (G) {
                    var F = t ? G.originalEvent.touches[0] : G;
                    var E = Math.max(0, Math.min(F.clientX - C, A));
                    y.width(E);
                    if (B) {
                        B.setPosition(E / A * B.durationEstimate);
                    }
                    return false;
                }).bind(u, function (E) {
                    d.settings.searching = false;
                    z.removeClass("searching");
                    if (d.el.hasClass("playing") && B) {
                        B.resume();
                    }
                    a(this).unbind(x);
                    a(this).unbind(u);
                    return false;
                }).trigger({type: x, clientX: D.clientX});
                return false;
            });
        };
        _set_vol_class = function (t) {
            if (t == 0) {
                a(".sp-volume-button").removeClass("sp-vol-medium sp-vol-max").addClass("sp-vol-off");
            } else {
                if (t <= 50) {
                    a(".sp-volume-button").removeClass("sp-vol-max sp-vol-off").addClass("sp-vol-medium");
                } else {
                    if (t > 75) {
                        a(".sp-volume-button").removeClass("sp-vol-medium sp-vol-off").addClass("sp-vol-max");
                    }
                }
            }
        };
        _format_time = function (u) {
            var w = Math.floor(u / 1000), t = Math.floor(w / 60), v = w - t * 60;
            return t + ":" + (v < 10 ? "0" + v : v);
        };
        _pretty_link = function (y) {
            var D = "", A = y.html(), t = y.attr("href"), E = y.data("cover"), v = y.data("artist"), C = y.data("artist_url"), B = y.data("artist_target"), z = y.data("release_url"), x = y.data("release_target"), u = y.data("shop_url"), w = y.data("shop_target");
            if (E == undefined || E == "") {
                E = "";
            } else {
                E = 'data-cover="' + E + '"';
            }
            if (v == undefined || v == "") {
                v = "";
            } else {
                v = 'data-artist="' + v + '"';
            }
            if (C == undefined || C == "") {
                C = "";
            } else {
                C = 'data-artist_url="' + C + '"';
            }
            if (B == undefined || B == "") {
                B = "";
            } else {
                B = 'data-artist_target="' + B + '"';
            }
            if (z == undefined || z == "") {
                z = "";
            } else {
                z = 'data-release_url="' + z + '"';
            }
            if (x == undefined || x == "") {
                x = "";
            } else {
                x = 'data-release_target="' + x + '"';
            }
            if (u == undefined || u == "") {
                u = "";
            } else {
                u = 'data-shop_url="' + u + '"';
            }
            if (w == undefined || w == "") {
                w = "";
            } else {
                w = 'data-shop_target="' + w + '"';
            }
            D = '<a href="' + t + '" ' + E + " " + v + " " + C + " " + B + " " + z + " " + x + " " + u + " " + w + ">" + A + "</a>";
            D = a(D);
            return D;
        };
        _add_track = function (v) {
            v.preventDefault();
            if ("#" == a(this).attr("href") || "" == a(this).attr("href")) {
                return false;
            }
            if (d.settings.obj.status == "working") {
                return false;
            }
            var t = _pretty_link(a(this)), u = [t];
            d.settings.obj = {status: "working", action: "add_track", tracks: u, tracks_size: 1, track_nr: -1};
            r();
            return false;
        };
        _play_track = function (v) {
            v.preventDefault();
            if ("#" == a(this).attr("href") || "" == a(this).attr("href")) {
                return false;
            }
            if (d.settings.obj.status == "working") {
                return false;
            }
            var t = _pretty_link(a(this)), u = [t];
            if (d.settings.mobile) {
                var w = "add_track";
            } else {
                var w = "play_track";
            }
            d.settings.obj = {status: "working", action: "play_track", tracks: u, tracks_size: 1, track_nr: -1};
            r();
            return false;
        };
        _add_list = function (u) {
            u.preventDefault();
            var x = a(this).data("id");
            if (x == undefined || x == "" || a("#" + x).length <= 0) {
                return false;
            }
            if (d.settings.obj.status == "working") {
                return false;
            }
            var w = a("#" + x), t = new Array(), v = a("a.sp-add-track, a.sp-play-track", w).length;
            a("a.sp-add-track, a.sp-play-track", w).each(function (y) {
                t.push(_pretty_link(a(this)));
            });
            d.settings.obj = {status: "working", action: "add_list", tracks: t, tracks_size: v, track_nr: -1};
            r();
        };
        _play_list = function (u) {
            u.preventDefault();
            var y = a(this).data("id");
            if (y == undefined || y == "" || a("#" + y).length <= 0) {
                return false;
            }
            if (d.settings.obj.status == "working") {
                return false;
            }
            var w = a("#" + y), t = new Array(), v = a("a.sp-add-track, a.sp-play-track", w).length;
            a("a.sp-add-track, a.sp-play-track", w).each(function (z) {
                t.push(_pretty_link(a(this)));
            });
            if (d.settings.mobile) {
                var x = "add_list";
            } else {
                var x = "play_list";
            }
            d.settings.obj = {status: "working", action: "play_list", tracks: t, tracks_size: v, track_nr: -1};
            r();
        };
        _debug = function (t) {
            if (d.settings.debug) {
                a("#scamp-console").append(t + "<br>");
            }
        };
        d.update_events = function (t) {
            a(t).off("click", ".sp-add-track", _add_track);
            a(t).off("click", ".sp-play-track", _play_track);
            a(t).off("click", ".sp-add-list", _add_list);
            a(t).off("click", ".sp-play-list", _play_list);
            a(t).on("click", ".sp-add-track", _add_track);
            a(t).on("click", ".sp-play-track", _play_track);
            a(t).on("click", ".sp-add-list", _add_list);
            a(t).on("click", ".sp-play-list", _play_list);
        };
        d.update_content = function () {
            var v = d.settings.track, t = null;
            if (v == null) {
                return;
            }
            a("a.sp-play-track").removeClass("sp-play sp-pause sp-stop sp-loading");
            if (v.hasClass("sc-list")) {
                t = v.data("sc_list");
            } else {
                if (v.hasClass("sc-track")) {
                    t = v.data("sc");
                } else {
                    t = v.find(".sp-track-control").attr("href");
                }
            }
            var u = a('a.sp-play-track[href="' + t + '"]');
            if (u.length > 0) {
                switch (d.settings.status) {
                    case"loading":
                        u.addClass("sp-loading");
                        break;
                    case"play":
                        u.addClass("sp-play");
                        break;
                    case"pause":
                        u.addClass("sp-pause");
                        break;
                    case"stop":
                        u.addClass("sp-stop");
                        break;
                    }
            }
        };
        o();
    };
})(jQuery);